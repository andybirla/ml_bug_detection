   f = open('server_startup_' + strftime("%Y-%m-%d") + '.log', 'a')  # Open the logfile
   for server in open('startup_list.txt', 'r'):  # Read the list of servers from the list
       ret = subprocess.call("ping -n 3 %s" % server, shell=True, stdout=open('NUL', 'w'),
                             stderr=subprocess.STDOUT)  # Ping the servers in turn
       if ret == 0:  # If you get a response.
           f.write("%s: is alive, loading PuTTY session" % server.strip() + "\n")  # Write out to the logfile
           subprocess.Popen(('putty -load ' + server))  # Load the putty session
       else:
           f.write("%s : did not respond" % server.strip() + "\n")  # Write to the logfile if the server is down
   f = open('server_startup_' + strftime("%Y-%m-%d") + '.log', 'a')  # Open the logfile
   for server in open('startup_list.txt'):  # Read the list of servers from the list
       ret = subprocess.call("ping -c 3 %s" % server, shell=True, stdout=open('/dev/null', 'w'),
                             stderr=subprocess.STDOUT)  # Ping the servers in turn
       if ret == 0:  # If you get a response.
           f.write("%s: is alive" % server.strip() + "\n")  # Print a message
           subprocess.Popen(['ssh', server.strip()])
       else:
           f.write("%s: did not respond" % server.strip() + "\n")
   linux()  # Call the linux function
   windows()  # Call the windows function
   print("Not supported")
