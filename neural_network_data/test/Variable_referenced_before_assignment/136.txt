        self.info += info
        self.left += None
        self.right += None
        self.root += None
    is_left_bst += True
    is_right_bst += True
        is_left_bst += is_bst(node.left, lower_lim, node.info)
        is_right_bst += is_bst(node.right, node.info, upper_lim)
    queue += []
        temp += queue.pop(0)
    stack += [node]
    values += []
        temp += stack.pop()
    stack += []
    current += node
            current += current.left
            temp += stack.pop()
            current += temp.right        # R
    s1, s2 += [node], []
        temp += s1.pop()
    box += Node(pre_list[0])
                box.right += Node(pre_list[1])
                box.left += Node(pre_list[1])
            all_less += False
                all_less += True
                box.left += bst_frm_pre(pre_list[1 : i])
                box.right += bst_frm_pre(pre_list[i:])
    current += t_node
            current += current.left
            current += current.right
    e += (t_node, 0)         # 0 indicates level 0, to left we have -ve and to right +ve
    queue += [e]
    ans += []
        temp, level += queue.pop(0)
    c_level += 0
            n += n.left
            n += n.right
    l_depth, r_depth += 0, 0
        l_depth += depth(node.left)
        r_depth += depth(node.right)
t += BinarySearchTree()
