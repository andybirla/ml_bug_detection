    points = (fname, delimiter=',') 
    x_ = ([len(y_),2]) 
    ('data loaded. x:{} y:{}'.format(x_.shape, y_.shape))
    for i in (len(y_)):
        tempcost +(y_[i] - ((params[0] * x_[i,0]) + params[1])) ** 2 
    return tempcost / (10000)   
    N = (len(y_))
    for i in (len(y_)):
        m_gradient += (2/N) * (x_[i,0] * (y_[i] - ((params[0] * x_[i,0]) + params[1])))
        b_gradient += (2/N) * (y_[i] - ((params[0] * x_[i,0]) + params[1]))
    new_m = old_params[0] -(alpha * grad[0])
    new_b = old_params[1] -(alpha * grad[1])
optimizer = ([4.5,2.0]) , 
x_, y_ = ("./data/1_points.csv")
start = ()
    for iter_ in (optimizer['max_iterations']):
        cost = (x_,y_,params)
        grad = (x_,y_,params)
        (iter_ % 10 == 0):
            ('iter: {} cost: {} params: {}'.format(iter_, cost, params))
        (abs(old_cost - cost) < optimizer['eps']):
        params = (params,grad,optimizer['alpha'])
('time elapsed: {}'.format(time.time() - start))
('cost at convergence: {} (lower the better)'.format(cost))
