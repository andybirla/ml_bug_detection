TAG = ('TF-IDF-GENE/', 'b')
    tf_idf = []  # will hold a dict of word_count for every (line in a doc in this case)
        (TAG, 'modifying over exising file.. @', prev_file_path)
        idf, tf_idf = (open(prev_file_path, 'rb'))
        prev_doc_count = (idf)
        prev_corpus_length = (tf_idf)
        file1 = (f, 'r')  # never use 'rb' for textual data, it creates something like,  {b'line-inside-the-doc'}
            for i in (line.split()):
            for word in ():
            (dict)
        ()
            true_idf = (len(tf_idf) / idf[key])
            true_tf = doc[key] / (doc)
    (TAG, 'Total number of unique words in corpus', len(idf),
          ( ' + paint('++' + str(len(idf) - prev_doc_count), 'g') + ' )' if prev_file_path else '')
    (TAG, 'Total number of docs in corpus:', len(tf_idf),
          ( ' + paint('++' + str(len(tf_idf) - prev_corpus_length), 'g') + ' )' if prev_file_path else '')
        ((idf, tf_idf), open(dump_path, 'wb'), protocol=pickle.HIGHEST_PROTOCOL)
        (TAG, 'Dumping TF-IDF vars @', dump_path)
