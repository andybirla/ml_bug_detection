    home_dir = ('~')
    credential_dir = (home_dir, '.credentials')
    if not (credential_dir):
        (credential_dir)
    store = (credential_path)
    credentials = ()
        flow = (CLIENT_SECRET_FILE, SCOPES)
        credentials = (flow, store)
        ('Storing credentials to ' + credential_path)
    credentials = ()
    http = (httplib2.Http())
    service = ('gmail', 'v1', http=http)
        message1 = (sender, to, subject, msgHtml, msgPlain, attachmentFile)
        message1 = (sender, to, subject, msgHtml, msgPlain)
    result = (service, "me", message1)
        message =(service.users().messages().send(userId=user_id, body=message).execute())
        ('Message Id: %s' % message['id'])
        ('An error occurred: %s' % error)
    message = ('mixed')
    messageA = ('alternative')
    messageR = ('related')
    (MIMEText(msgHtml, 'html'))
    (MIMEText(msgPlain, 'plain'))
    (messageR)
    (messageA)
    ("create_message_with_attachment: file:", attachmentFile)
    content_type, encoding = (attachmentFile)
    main_type, sub_type = ('/', 1)
        fp = (attachmentFile, 'rb')
        msg = (fp.read(), _subtype=sub_type)
        ()
        fp = (attachmentFile, 'rb')
        msg = (fp.read(), _subtype=sub_type)
        ()
        fp = (attachmentFile, 'rb')
        msg = (fp.read(), _subtype=sub_type)
        ()
        fp = (attachmentFile, 'rb')
        msg = (main_type, sub_type)
        (fp.read())
        ()
    filename = (attachmentFile)
    ('Content-Disposition', 'attachment', filename=filename)
    (msg)
    return {'raw': (message.as_string())}
    msg = ('alternative')
    (MIMEText(msgPlain, 'plain'))
    (MIMEText(msgHtml, 'html'))
    return {'raw': (msg.as_string())}
    to = ("Enter Email Address: ")
    sender = ("Your Mail ID: ")
    subject = ("Enter your Subject: ")
    msgHtml = ("Enter your Message: ")
    (sender, to, subject, msgHtml, msgPlain)
    ()
