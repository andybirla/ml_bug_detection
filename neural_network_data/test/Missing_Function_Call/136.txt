        return (self.info)
        is_left_bst = (node.left, lower_lim, node.info)
        is_right_bst = (node.right, node.info, upper_lim)
        (node.left)
        (node.right)
    (node.info)
        (node.left)
    (node.info)
        (node.right)
    (node.info)
        (node.left)
        (node.right)
        (node)
        temp = (0)
        (temp.info)
            (temp.left)
            (temp.right)
        temp = ()
        (temp.info)
        (temp.info)
            (temp.right)
            (temp.left)
            (current)       # L
            temp = ()
            (temp.info)            # N
        temp = ()
        (temp)
            (temp.left)
            (temp.right)
    (*(s2[::-1]))
    box = (pre_list[0])
    if (pre_list) > 1:
        if (pre_list) == 2:
                box.right = (pre_list[1])
                box.left = (pre_list[1])
            for i in (1, len(pre_list)):
                box.left = (pre_list[1 : i])
                box.right = (pre_list[i:])
    e =(t_node, 0)         # 0 indicates level 0, to left we have -ve and to right +ve
        temp, level = (0)
            (str(temp.info))
            ((temp.left, level - 1))
            ((temp.right, level + 1))
    return ' (ans)
        l_depth = (node.left)
        r_depth = (node.right)
    return 1 + (l_depth, r_depth)
t = ()
(10)
(5)
(15)
(3)
(1)
(0)
(2)
(7)
(12)
(18)
(19)
(depth(t.root))
