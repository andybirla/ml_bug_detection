    sleep()
    win = curses.newwin( 60, 0, 0)
    win.keypad()
    curses.curs_set()
    win.border()
    win.nodelay()
    s = open( 'r')
    snake = [ 10], [4, 9], [4, 8]]  # Initial snake co-ordinates
    food = [ 20]  # First food co-ordinates
    win.addch( food[1], '*')  # Prints or shows the food
        win.border()
        win.addstr( 2, 'Score : ' + str(score) + ' ')  # Printing 'Score' and
        win.addstr( 27, ' SNAKE ')  # 'SNAKE' strings
        win.addstr( 37, 'Highscore: ' + str(hscore) + ' ')
            int() / 5 + len(snake) / 10) % 120))  # Increases the speed of Snake as its length increases
        if key == ord():  # If SPACE BAR is pressed, wait for another
            key = -1  # one ()
            win.addstr( 40, 'PAUSED')
            while key != ord():
        if key not in [ KEY_RIGHT, KEY_UP, KEY_DOWN, 27]:  # If an invalid key is pressed
        snake.insert( [snake[0][0] + (key == KEY_DOWN and 1) + (key == KEY_UP and -1),
                         snake[0][1] + () + (key == KEY_RIGHT and 1)])
        if snake[][0] == 0: snake[0][0] = 18
        if snake[][1] == 0: snake[0][1] = 58
        if snake[][0] == 19: snake[0][0] = 1
        if snake[][1] == 59: snake[0][1] = 1
        if snake[] in snake[1:]:
        if snake[] == food:  # When snake eats the food
                food = [randint( 18), randint(1, 58)]  # Calculating next food's coordinates
            win.addch( food[1], '*')
            win.addch( last[1], ' ')
        win.addch( snake[0][1], '#')
    if score > int():
        s = open( 'w')
        s.write())
if score > int():
    s = open( 'w')
    s.write())
