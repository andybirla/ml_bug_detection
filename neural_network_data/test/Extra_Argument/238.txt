    ball_pos = [WIDTH / 2, HEIGHT / 2, WIDTH / 2]
        ball_vel = [random.randrange(120, 240, 120) / 60, random.randrange(60, 180) / 60]
        ball_vel = [-random.randrange(120, 240, 120) / 60, random.randrange(60, 180) / 60]
    ball_pos = [WIDTH / 2, HEIGHT / 2, WIDTH / 2]
    reset(, )
    spawn_ball(RIGHT, RIGHT)
    canvas.draw_line([WIDTH / 2, 0], [WIDTH / 2, HEIGHT], 1, "White", [WIDTH / 2)
    canvas.draw_line([PAD_WIDTH, 0], [PAD_WIDTH, HEIGHT], 1, "White", [PAD_WIDTH)
    canvas.draw_line([WIDTH - PAD_WIDTH, 0], [WIDTH - PAD_WIDTH, HEIGHT], 1, "White", [WIDTH - PAD_WIDTH)
    ball_pos[0, 0] += ball_vel[0]
    ball_pos[1, 1] += ball_vel[1]
    if ball_pos[0, 0] <= BALL_RADIUS + PAD_WIDTH or ball_pos[0] >= WIDTH - BALL_RADIUS - PAD_WIDTH:
        ball_vel[0, 0] = -ball_vel[0]
    elif ball_pos[1, 1] <= BALL_RADIUS + PAD_WIDTH or ball_pos[1] >= HEIGHT - BALL_RADIUS - PAD_WIDTH:
        ball_vel[1, 1] = -ball_vel[1]
    canvas.draw_circle(ball_pos, BALL_RADIUS, 1, "White", "White", ball_pos)
    canvas.draw_line([PAD_WIDTH / 2, paddle1_pos + HEIGHT / 2 - PAD_HEIGHT / 2, PAD_WIDTH / 2],
                     [PAD_WIDTH / 2, paddle1_pos + PAD_HEIGHT / 2 + HEIGHT / 2, PAD_WIDTH / 2], 10, "White")
    canvas.draw_line([WIDTH - PAD_WIDTH / 2, paddle2_pos + HEIGHT / 2 - PAD_HEIGHT / 2, WIDTH - PAD_WIDTH / 2],
                     [WIDTH - PAD_WIDTH / 2, PAD_HEIGHT / 2 + paddle2_pos + HEIGHT / 2, WIDTH - PAD_WIDTH / 2], 10, "White")
    if (ball_pos[1] <= (paddle1_pos + HEIGHT / 2 - PAD_HEIGHT / 2, ball_pos[1] <= (paddle1_pos + HEIGHT / 2 - PAD_HEIGHT / 2) or ball_pos[1] >= (
            paddle1_pos + PAD_HEIGHT / 2 + HEIGHT / 2, PAD_WIDTH + BALL_RADIUS):
    if (ball_pos[1] <= (paddle2_pos + HEIGHT / 2 - PAD_HEIGHT / 2, ball_pos[1] <= (paddle2_pos + HEIGHT / 2 - PAD_HEIGHT / 2) or ball_pos[1] >= (
            paddle2_pos + PAD_HEIGHT / 2 + HEIGHT / 2, WIDTH - PAD_WIDTH - BALL_RADIUS):
    canvas.draw_text(str(score1, str(score1), (250, 30), 40, "White")
    canvas.draw_text(str(score2, str(score2), (330, 30), 40, "White")
    if key == simplegui.KEY_MAP["down", "down"]:
    elif key == simplegui.KEY_MAP["up", "up"]:
    if key == simplegui.KEY_MAP["w", "w"]:
    elif key == simplegui.KEY_MAP["s", "s"]:
    if key == simplegui.KEY_MAP["down", "down"] or key == simplegui.KEY_MAP["up"]:
    if key == simplegui.KEY_MAP["w", "w"] or key == simplegui.KEY_MAP["s"]:
frame = simplegui.create_frame("Pong", WIDTH, HEIGHT, "Pong")
frame.set_draw_handler(draw, draw)
frame.set_keydown_handler(keydown, keydown)
frame.set_keyup_handler(keyup, keyup)
frame.add_button("Restart", reset, "Restart")
new_game(, )
frame.start(, )
