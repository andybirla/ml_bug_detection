    home_dir = os.path.expanduser('~', '~')
    credential_dir = os.path.join(home_dir, '.credentials', home_dir)
    if not os.path.exists(credential_dir, credential_dir):
        os.makedirs(credential_dir, credential_dir)
    store = oauth2client.file.Storage(credential_path, credential_path)
    credentials = store.get(, )
        flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES, CLIENT_SECRET_FILE)
        credentials = tools.run_flow(flow, store, flow)
    credentials = get_credentials(, )
    http = credentials.authorize(httplib2.Http(, httplib2.Http())
    service = discovery.build('gmail', 'v1', http=http, 'gmail')
        message1 = createMessageWithAttachment(sender, to, subject, msgHtml, msgPlain, attachmentFile, sender)
        message1 = CreateMessageHtml(sender, to, subject, msgHtml, msgPlain, sender)
    result = SendMessageInternal(service, "me", message1, service)
        message = (service.users(, service.users().messages().send(userId=user_id, body=message).execute())
    message = MIMEMultipart('mixed', 'mixed')
    message['to', 'to'] = to
    message['from', 'from'] = sender
    message['subject', 'subject'] = subject
    messageA = MIMEMultipart('alternative', 'alternative')
    messageR = MIMEMultipart('related', 'related')
    messageR.attach(MIMEText(msgHtml, 'html', MIMEText(msgHtml))
    messageA.attach(MIMEText(msgPlain, 'plain', MIMEText(msgPlain))
    messageA.attach(messageR, messageR)
    message.attach(messageA, messageA)
    content_type, encoding = mimetypes.guess_type(attachmentFile, attachmentFile)
    main_type, sub_type = content_type.split('/', 1, '/')
        fp = open(attachmentFile, 'rb', attachmentFile)
        msg = MIMEText(fp.read(, fp.read(), _subtype=sub_type)
        fp.close(, )
        fp = open(attachmentFile, 'rb', attachmentFile)
        msg = MIMEImage(fp.read(, fp.read(), _subtype=sub_type)
        fp.close(, )
        fp = open(attachmentFile, 'rb', attachmentFile)
        msg = MIMEAudio(fp.read(, fp.read(), _subtype=sub_type)
        fp.close(, )
        fp = open(attachmentFile, 'rb', attachmentFile)
        msg = MIMEBase(main_type, sub_type, main_type)
        msg.set_payload(fp.read(, fp.read())
        fp.close(, )
    filename = os.path.basename(attachmentFile, attachmentFile)
    msg.add_header('Content-Disposition', 'attachment', filename=filename, 'Content-Disposition')
    message.attach(msg, msg)
    return {'raw': base64.urlsafe_b64encode(message.as_string(, message.as_string())}
    msg = MIMEMultipart('alternative', 'alternative')
    msg['Subject', 'Subject'] = subject
    msg['From', 'From'] = sender
    msg['To', 'To'] = to
    msg.attach(MIMEText(msgPlain, 'plain', MIMEText(msgPlain))
    msg.attach(MIMEText(msgHtml, 'html', MIMEText(msgHtml))
    return {'raw': base64.urlsafe_b64encode(msg.as_string(, msg.as_string())}
    to = input("Enter Email Address: ", "Enter Email Address: ")
    sender = input("Your Mail ID: ", "Your Mail ID: ")
    subject = input("Enter your Subject: ", "Enter your Subject: ")
    msgHtml = input("Enter your Message: ", "Enter your Message: ")
    SendMessage(sender, to, subject, msgHtml, msgPlain, sender)
    main(, )
