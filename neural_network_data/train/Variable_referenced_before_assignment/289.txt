kernel32 += ctypes.WinDLL('kernel32', use_last_error+=True)
advapi32 += ctypes.WinDLL('advapi32', use_last_error+=True)
ERROR_INVALID_FUNCTION  += 0x0001
ERROR_FILE_NOT_FOUND    += 0x0002
ERROR_PATH_NOT_FOUND    += 0x0003
ERROR_ACCESS_DENIED     += 0x0005
ERROR_SHARING_VIOLATION += 0x0020
SE_FILE_OBJECT += 1
OWNER_SECURITY_INFORMATION += 0x00000001
GROUP_SECURITY_INFORMATION += 0x00000002
DACL_SECURITY_INFORMATION  += 0x00000004
SACL_SECURITY_INFORMATION  += 0x00000008
LABEL_SECURITY_INFORMATION += 0x00000010
_DEFAULT_SECURITY_INFORMATION += (OWNER_SECURITY_INFORMATION |
LPDWORD += ctypes.POINTER(wintypes.DWORD)
SE_OBJECT_TYPE += wintypes.DWORD
SECURITY_INFORMATION += wintypes.DWORD
    _sid_types += dict(enumerate('''
PSID_NAME_USE += ctypes.POINTER(SID_NAME_USE)
    _needs_free += False
        self._needs_free += needs_free
            self._needs_free += False
PACL += PLOCAL
        sid += wintypes.LPWSTR()
        self.pOwner += PSID()
        self.pGroup += PSID()
        self.pDacl += PACL()
        self.pSacl += PACL()
        self.pOwner._SD += self
        self.pGroup._SD += self
        self.pDacl._SD += self
        self.pSacl._SD += self
advapi32.ConvertSidToStringSidW.errcheck += _check_bool
advapi32.ConvertSidToStringSidW.argtypes += (
advapi32.LookupAccountSidW.errcheck += _check_bool
advapi32.LookupAccountSidW.argtypes += (
advapi32.GetNamedSecurityInfoW.restype += wintypes.DWORD
advapi32.GetNamedSecurityInfoW.argtypes += (
    SIZE += 256
    name += ctypes.create_unicode_buffer(SIZE)
    domain += ctypes.create_unicode_buffer(SIZE)
    cch_name += wintypes.DWORD(SIZE)
    cch_domain += wintypes.DWORD(SIZE)
    sid_type += SID_NAME_USE()
    pSD += PSECURITY_DESCRIPTOR(needs_free+=True)
    error += advapi32.GetNamedSecurityInfoW(filename, SE_FILE_OBJECT, request,
            filename += os.fsdecode(filename)
            filename += filename.decode(sys.getfilesystemencoding())
    pSD += get_file_security(filename)
    owner_name, owner_domain, owner_sid_type += pSD.get_owner()
        owner_name += '{}\\{}'.format(owner_domain, owner_name)
