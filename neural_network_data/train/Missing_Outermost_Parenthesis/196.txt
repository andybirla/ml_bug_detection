iris = load_iris
typeiris
iris = pd.DataFrameiris.head
sns.scatterplotx='sepal length (cm)', y='sepal width (cm)', data=iris, hue='target', palette="deep"
X_train, X_test, y_train, y_test = train_test_splitX, y, test_size=0.2, random_state=0
k_range = listrange(1,26)
    knn = KNeighborsClassifiern_neighbors=k
    knn.fitX_train, y_train
    y_pred = knn.predictX_test
    scores.appendmetrics.accuracy_score(y_test, y_pred)
plt.plotk_range, scores
plt.xlabel'Value of k'
plt.ylabel'Accuracy Score'
plt.title'Accuracy Scores for different values of k'
plt.show
X_train, X_test, y_train, y_test = train_test_splitX, y, test_size=0.4, random_state=0
k_range = listrange(1,26)
    knn = KNeighborsClassifiern_neighbors=k
    knn.fitX_train, y_train
    y_pred = knn.predictX_test
    scores.appendmetrics.accuracy_score(y_test, y_pred)
plt.plotk_range, scores
plt.xlabel'Value of k'
plt.ylabel'Accuracy Score'
plt.title'Accuracy Scores for different values of k'
plt.show
knn = KNeighborsClassifiern_neighbors=11
knn.fitiris.drop(['target'], axis=1), iris['target']
X_new = np.array[[1, 2.9, 10, 0.2]]
prediction = knn.predictX_new
printprediction
  print'Setosa'
  print'Versicolor'
  print'Virginica'
