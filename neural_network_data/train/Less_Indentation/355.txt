   id = db.Column(db.Integer, primary_key=True)
   content = db.Column(db.String(200), nullable=False)
   completed = db.Column(db.Integer, default=0)
   pub_date = db.Column(db.DateTime, nullable=False, default=datetime.utcnow)
   def __repr__(self):
       return "<Task %r>" % self.id
   if request.method == "POST":
       task_content = request.form["task"]
       new_task = Todo(content=task_content)
       try:
           db.session.add(new_task)
           db.session.commit()
           return redirect("/")
       except:
           return "There is an issue"
   else:
       tasks = Todo.query.order_by(Todo.pub_date).all()
       return render_template("index.html", tasks=tasks)
   task = Todo.query.get_or_404(id)
   try:
       db.session.delete(task)
       db.session.commit()
       return redirect("/")
   except:
       return "This is an Problem while deleting"
   task = Todo.query.get_or_404(id)
   if request.method == "POST":
       task.content = request.form["task"]
       try:
           db.session.commit()
           return redirect("/")
       except:
           return "There is an issue"
   else:
       tasks = Todo.query.order_by(Todo.pub_date).all()
       return render_template("index.html", update_task=task, tasks=tasks)
   app.run(debug=True)
