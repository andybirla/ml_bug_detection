   while True:
       try:
           reply = cli.recv(1024).decode("utf-8")
           if reply == "QUIT":
               index_of_cli = clients.index(cli)
               nick = nickename[index_of_cli]
               nickename.remove(nick)
               clients.remove(cli)
               BroadCasating(f"{nick} has left the chat room")
               print(f"Disconnected with f{nick}")
               break
           BroadCasating(reply)
       except:
           index_of_cli = clients.index(cli)
           print(index_of_cli)
           nick = nickename[index_of_cli]
           nickename.remove(nick)
           clients.remove(cli)
           BroadCasating(f"{nick} has left the chat room")
           print(f"Disconnected with {nick}")
           break
   for client in clients:
       client.send(bytes(msg, "utf-8"))
   while True:
       client_sckt, addr = s.accept()
       print(f"Connection has been established {addr}")
       client_sckt.send(bytes("NICK", "utf-8"))
       nick = client_sckt.recv(1024).decode("utf-8")
       nickename.append(nick)
       clients.append(client_sckt)
       print(f"{nick} has joined the chat room ")
       BroadCasating(f"{nick} has joined the chat room say hi !!!")
       threading._start_new_thread(Client_Handler , (client_sckt , ))
