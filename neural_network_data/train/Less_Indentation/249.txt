   def __init__(self, data = None):
       self.leftChild = None
       self.rightChild = None
       self.data = data
   if node is None:
       return 0
   else:
       leftHeight = height(node.leftChild)
       rightHeight = height(node.rightChild)
       if leftHeight > rightHeight:
           return leftHeight + 1
       else:
           return rightHeight + 1
   if root == None:
       return 0
   else:
       h = height(root)
       for i in range(h + 1):
           printBFT(root, i)
   if root is None:
       return
   else:
       if level == 1:
           print(root.data, end = ' ')
       elif level > 1:
           printBFT(root.leftChild, level - 1)
           printBFT(root.rightChild, level - 1)
   root = Node(1)
   root.leftChild = Node(2)
   root.rightChild = Node(3)
   root.leftChild.leftChild = Node(4)
   breadthFirstTraversal(root)
