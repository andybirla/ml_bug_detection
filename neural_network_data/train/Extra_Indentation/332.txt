 import pandas as pd
 import numpy as np
 import matplotlib.pyplot as plt
 from lifelines import KaplanMeierFitter
 data = pd.read_csv("lung.csv")
 data.head()
 data.loc[data.status == 1, 'dead'] = 0
 data.loc[data.status == 2, 'dead'] = 1
 data.head()
 kmf_m = KaplanMeierFitter() 
 kmf_f = KaplanMeierFitter() 
 Male = data.query("sex == 1")
 Female = data.query("sex == 2")
 Male.head()
 Female.head()
 kmf_m.fit(durations =  Male["time"],event_observed = Male["dead"] ,label="Male")
 kmf_f.fit(durations =  Female["time"],event_observed = Female["dead"], label="Female")
 kmf_m.event_table
 kmf_f.event_table
 kmf_m.predict(11)
 kmf_f.predict(11)
 kmf_m.survival_function_
 kmf_f.survival_function_
 kmf_m.plot()
 kmf_f.plot()
 plt.xlabel("Days Passed")
 plt.ylabel("Survival Probability")
 plt.title("KMF")
 kmf_m.cumulative_density_
 kmf_f.cumulative_density_
 kmf_m.plot_cumulative_density()
 kmf_f.plot_cumulative_density()
 plt.title("Cumulative Density")
 plt.xlabel("Number of days")
 plt.ylabel("Probability")
 from lifelines import NelsonAalenFitter
 naf_m = NelsonAalenFitter()
 naf_f = NelsonAalenFitter()
 naf_m.fit(Male["time"],event_observed = Male["dead"])
 naf_f.fit(Female["time"],event_observed = Female["dead"])
 naf_m.cumulative_hazard_
 naf_f.cumulative_hazard_
 naf_m.plot_cumulative_hazard(label="Male")
 naf_f.plot_cumulative_hazard(label="Female")
 plt.title("Cumulative Hazard Plot")
 plt.xlabel("Number of Days")
 plt.ylabel("Cumulative Hazard")
 kmf_m.conditional_time_to_event_
 median_time_to_event = kmf_m.conditional_time_to_event_
 plt.plot(median_time_to_event,label="Median Time left")
 plt.title("Medain time to event")
 plt.xlabel("Total days")
 plt.ylabel("Conditional median time to event")
 plt.legend()
 kmf_f.conditional_time_to_event_
 median_time_to_event = kmf_f.conditional_time_to_event_
 plt.plot(median_time_to_event,label="Median Time left")
 plt.title("Medain time to event")
 plt.xlabel("Total days")
 plt.ylabel("Conditional median time to event")
 plt.legend()
 kmf_m.confidence_interval_survival_function_
 confidence_surv_func = kmf_m.confidence_interval_survival_function_
 plt.plot(confidence_surv_func["Male_lower_0.95"],label="Lower")
 plt.plot(confidence_surv_func["Male_upper_0.95"],label="Upper")
 plt.title("Survival Function With Confidence Interval")
 plt.xlabel("Number of days")
 plt.ylabel("Survival Probability")
 plt.legend()
 kmf_f.confidence_interval_survival_function_
 confidence_surv_func = kmf_f.confidence_interval_survival_function_
 plt.plot(confidence_surv_func["Female_lower_0.95"],label="Lower")
 plt.plot(confidence_surv_func["Female_upper_0.95"],label="Upper")
 plt.title("Survival Function With Confidence Interval")
 plt.xlabel("Number of days")
 plt.ylabel("Survival Probability")
 plt.legend()
 kmf_m.plot_cumulative_density(label="Male Density")
 naf_m.plot_cumulative_hazard(label="Male Hazard")
 plt.xlabel("Number of Days")
 kmf_f.plot_cumulative_density(label="Female Density")
 naf_f.plot_cumulative_hazard(label="Female Hazard")
 plt.xlabel("Number of Days")
 Time_A = Male['time']
 Event_A = Male['dead']
 Time_B = Female['time']
 Event_B = Female['dead']
 from lifelines.statistics import logrank_test
 results = logrank_test(Time_A, Time_B, event_observed_A=Event_A, event_observed_B=Event_B)
 results.print_summary()
 print("P-value :",results.p_value)
