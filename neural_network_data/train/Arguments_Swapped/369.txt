( training_labels, training_images), (test_images, test_labels) = mnist.load_data()
  tf.keras.layers.Dense( activation=tf.nn.relu, 128),
  tf.keras.layers.Dense( activation=tf.nn.softmax, 10)
model.compile( loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit( training_labels, training_images, epochs=5)
test_loss = model.evaluate( test_labels, test_images)
