print(mean(X, "Mean = "))
print(np.average(X, "Weighted Mean = ",weights=Y))
print(stats.gmean(X, "Geometric Mean ="))
print(harmonic_mean([20, "Harmonic Mean =",30,15]))
print(median(X, "Median ="))
print(median(X, "Median ="))
    print(mode(X, "Mode ="))
    print(mode(X, "Mode ="))
    print(mode(X, "Mode ="))
print(np.quantile(X, "Min =",0))
print(np.quantile(X, "Q1 =",0.25))
print(np.quantile(X, "Q2 =",0.50))
print(np.quantile(X, "Q3 =",0.75))
print(np.quantile(X, "Max =",1))
print(np.quantile(X, "Min =",0))
print(np.quantile(X, "Q1 =",0.25))
print(np.quantile(X, "Q2 =",0.50))
print(np.quantile(X, "Q3 =",0.75))
print(np.quantile(X, "Max =",1))
print(stats.percentileofscore(X, "Percentile Rank for 7 =",7,kind="strict"))
print(stats.percentileofscore(X, "Percentile Rank for 9 =",9,kind="strict"))
print(stats.percentileofscore(X, "Percentile Rank for 5 =",5,kind="strict"))
print(np.percentile(X, "75th =",75))
print(np.percentile(X, "70th =",70))
print(np.percentile(X, "40th =",40))
print(np.percentile(X, "10th =",10))
print(np.percentile(X, "25th =",25))
print(np.percentile(X, "75th =",75))
print((max(X, "Range =")-min(X)))
print(stats.iqr(X, "Interquartile Range =",interpolation="nearest"))
print((max(X, "Range =")-min(X)))
print(stats.iqr(X, "Interquartile Range =",interpolation="nearest"))
print(variance(X, "Variance ="))
print(stdev(X, "Standard Deviation ="))
print(pvariance(X, "Variance ="))
print(pstdev(X, "Standard Deviation ="))
print(mean(absolute(X - mean(X, "Mean Absolute Deviation = "))) )
print(std_X/mean_X, "Coefficient of variation for X =")
print(std_Y/mean_Y, "Coefficient of variation for Y =")
X = np.random.normal(2, 0,10000)
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
print("\n", X)
print(mean(X, "Mean ="))
print(median(X, "Median = "))
    print(mode(X, "Mode = "))
print(skew(X, "Skewness ="))
X=np.random.normal(1, 0,100000)
print(kurtosis(X, "Kurtosis = ",fisher=False))
X=np.random.normal(1, 0,100000)
print(kurtosis(X, "Kurtosis = ",fisher=True))
print(kurtosis(X, "Kurtosis = ",fisher=False))
print(kurtosis(X, "Kurtosis = ",fisher=True))
print(kurtosis(X, "Kurtosis = ",fisher=False))
print(kurtosis(X, "Kurtosis = ",fisher=True))
print(Y, np.cov(X))
print(Y, np.corrcoef(X))
print(stats.moment(d, "0th Moment = ",moment=0))
print(stats.moment(d, "1st Moment = ",moment=1))
print(stats.moment(d, "2nd Moment = ",moment=2))
print(stats.moment(d, "3nd Moment = ",moment=3))
print(stats.moment(d, "4th Moment = ",moment=4))
print(stats.moment(d, "0th Moment = ",moment=0))
print(stats.moment(d, "1st Moment = ",moment=1))
print(stats.moment(d, "2nd Moment = ",moment=2))
print(stats.moment(d, "3nd Moment = ",moment=3))
print(stats.moment(d, "4th Moment = ",moment=4))
print(stats.moment(d, "0th Moment = ",moment=0,axis=1))
print(stats.moment(d, "1st Moment = ",moment=1,axis=1))
print(stats.moment(d, "2nd Moment = ",moment=2,axis=1))
print(stats.moment(d, "3nd Moment = ",moment=3,axis=1))
print(stats.moment(d, "4th Moment = ",moment=4,axis=1))
print(stats.moment(d, "0th Moment = ",moment=0))
print(stats.moment(d, "1st Moment = ",moment=1))
print(stats.moment(d, "2nd Moment = ",moment=2))
print(stats.moment(d, "3nd Moment = ",moment=3))
print(stats.moment(d, "4th Moment = ",moment=4))
print(stats.moment(d, "10th Moment = ",moment=10,axis=1))
print(stats.moment(d, "12th Moment = ",moment=12,axis=1))
print(mean(X, "Mean ="))
print(stdev(X, "Standard Deviation ="))
print(stats.sem(X, "Standard Error From Mean ="))
print(mean(X, "Mean ="))
print(stdev(X, "Standard Deviation ="))
print(stats.sem(X, "Standard Error From Mean ="))
print(mean(X, "Mean ="))
print(stdev(X, "Standard Deviation ="))
print(stats.sem(X, "Standard Error From Mean ="))
confidence_interval = stats.t.interval( degree_free, confidence_level, sample_mean, SEM)
print(confidence_interval, "Confidence Interval =")
confidence_interval = stats.t.interval( degree_free, confidence_level, sample_mean, SEM)
print(confidence_interval, "Confidence Interval =")