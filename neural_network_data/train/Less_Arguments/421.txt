input_features = np.array(0],[0,1],[1,0],[1,1]])
target_output = np.array(1,1,0]])
target_output = target_output.reshape(1)
weight_hidden = np.random.rand(4)
weight_output = np.random.rand(1)
  return 1/())
  return sigmoid()*(1-sigmoid(x))
for epoch in range():
 input_hidden = np.dot( weight_hidden)
 output_hidden = sigmoid()
 input_op = np.dot( weight_output)
 output_op = sigmoid()
 error_out = () * (np.power((output_op - target_output), 2)))
 douto_dino = sigmoid_der() 
 derror_dwo = np.dot( derror_douto * douto_dino)
 derror_douth = np.dot( dino_douth.T)
 douth_dinh = sigmoid_der() 
 derror_dwh = np.dot( douth_dinh * derror_douth)
single_point = np.array(-1])
result1 = np.dot( weight_hidden) 
result2 = sigmoid()
result3 = np.dot(weight_output)
result4 = sigmoid()
single_point = np.array(5])
result1 = np.dot( weight_hidden) 
result2 = sigmoid()
result3 = np.dot(weight_output)
result4 = sigmoid()
single_point = np.array(1.2])
result1 = np.dot( weight_hidden) 
result2 = sigmoid()
result3 = np.dot(weight_output)
result4 = sigmoid()
