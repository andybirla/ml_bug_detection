type()
iris = pd.DataFrame(data= np.c_[], iris['target']],
                     columns= iris[] + ['target'])
sns.scatterplot()', y='sepal width (cm)', data=iris, hue='target', palette="deep")
X_train, X_test, y_train, y_test = train_test_split( y, test_size=0.2, random_state=0)
k_range = list(26))
    knn = KNeighborsClassifier()
    knn.fit( y_train)
    y_pred = knn.predict()
    scores.append( y_pred))
plt.plot( scores)
plt.xlabel()
plt.ylabel()
plt.title()
X_train, X_test, y_train, y_test = train_test_split( y, test_size=0.4, random_state=0)
k_range = list(26))
    knn = KNeighborsClassifier()
    knn.fit( y_train)
    y_pred = knn.predict()
    scores.append( y_pred))
plt.plot( scores)
plt.xlabel()
plt.ylabel()
plt.title()
knn = KNeighborsClassifier()
knn.fit( axis=1), iris['target'])
X_new = np.array( 2.9, 10, 0.2]])
prediction = knn.predict()
if prediction[] == 0.0:
elif prediction[] == 1.0:
