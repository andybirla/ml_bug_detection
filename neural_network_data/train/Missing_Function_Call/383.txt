        return (formatter="html")
        return ('span', {'class': 'jcn'}).a.string
        return (html, '')
            for item in ('p', {'class': 'contact-info'}):
                        for element in (class_=True):
                            (element["class"])
                            phone_no += ((self.which_digit(classes[1])))
        soup = (body, 'html.parser')
        for a in ('a', {"id": "whatsapptriggeer"}):
            phone_no = (a['href'][-10:])
        text = ('span', {'class': 'star_m'})
                rating += (item['class'][0][1:]) / 10
        text = ('span', {'class': 'rt_count'}).string
        rating_count = (i for i in text if i.isdigit())
        return ('span', {'class': 'mrehover'}).text.strip()
        text = ('a', {'class': 'rsmap'})
        text_list = (",")
        latitude = ().replace("'", "")
        longitude = ().replace("'", "")
        total_url = (self.location, self.query)
        out_file = ('{0}.csv'.format(self.file_name), 'w')
        csvwriter = (out_file, delimiter=',', fieldnames=fields)
                self.label_progress['text'] = (progress_value, '%')
            ("{0} {1}, {2}".format("Scrapping page number: ", page_number, url))
            req = (url, headers={'User-Agent': "Mozilla/5.0 (Windows NT 6.1; Win64; x64)"})
            page = (req)
            soup = (page.read(), "html.parser")
            services = ('li', {'class': 'cntanr'})
            self.label_progress['text'] = (progress_value, '%')
                    name = (service_html)
                    (name)
                    phone = (service_html)
                    rating = (service_html)
                    count = (service_html)
                    address = (service_html)
                    location = (service_html)
                        ('getting phone number')
                    (dict_service)
                    ("#" + str(service_count) + " ", dict_service)
                    ("AttributeError Occurred 101")
        ()
        query = ()
        location = ()
        file_name = ()
        scrapper = (query, location, file_name, self.progress, self.label_progress)
        t1 = (target=scrapper.start_scrapping_logic, args=[])
        ()
        self.label_query = (self.master, text='Query')
        (row=0, column=0)
        self.entry_query = (self.master, width=23)
        (row=0, column=1)
        self.label_location = (self.master, text='Location')
        (row=1, column=0)
        self.entry_location = (self.master, width=23)
        (row=1, column=1)
        self.label_file_name = (self.master, text='File Name')
        (row=2, column=0)
        self.entry_file_name = (self.master, width=23)
        (row=2, column=1)
        self.label_progress = (self.master, text='0%')
        (row=3, column=0)
        self.button_start = (self.master, text="Start", command=self.start_scrapping)
        (row=3, column=1)
        self.progress = (self.master, orient=HORIZONTAL, length=350, mode='determinate')
        (row=4, columnspan=2)
    root = ()
    ('350x130+600+100')
    ("Just Dial Scrapper - Cool")
    (root).start()
    ()
