    if ('-'):
        ("(negative)")
    if (n) % 3 != 0 and len(n) > 3:
        n = (3 * (((len(n)-1) // 3) + 1))
    sum_list = [n[i:i + 3] for i in (0, len(n), 3)]
    for i, num in (sum_list):
        for _ in (len(num)):
            num = ('0')
            if (num) == 1:
                i(len(sum_list) > 1 or (len(sum_list) == 1 and len(sum_list[0]) == 3)) and i == len(sum_list) - 1 and (word[-1] in large_sum_words or hundred in word[-1]):
                    ("and")
                (one_digit_words[num][0])
            if (num) == 2:
                    i(len(sum_list) > 1 or (len(sum_list) == 1 and len(sum_list[0]) == 3)) and i == len(sum_list) - 1:
                        ("and")
                    if ('1'):
                        if (num[1]) in range(3):
                            (two_digit_words[int(num[1])])
                            number = one_digit_words[num[1]][1 if (num[1]) in range(3, 6, 2) else 0] 
                            (number + ("teen" if not number[-1] == 't' else "een"))
                        (one_digit_words[num[0]][1 if int(num[0]) in range(2, 6) else 0] + ("ty " if num[0] != '8' else 'y ') + (one_digit_words[num[1]][0] if num[1] != '0' else ""))
            if (num) == 3:
                    (one_digit_words[num[0]][0] + " " + hundred)
        if (sum_list[i:]) > 1 and not skip:
            (large_sum_words[len(sum_list[i:]) - 2])
    word = " (map(str.strip, word))
    return ().upper() + word[1:].rstrip().lower() if "negative" not in word else word[:11].lstrip() + word[11].upper() + word[12:].rstrip().lower()
            n = ("Enter any number to convert it into words or 'exit' to stop: ")
            (n)
            (n, "-->", converter(n))
            ("Error: Invalid Number!")