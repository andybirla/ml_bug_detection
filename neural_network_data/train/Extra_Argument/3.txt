myPen = turtle.Turtle(, )
myPen.hideturtle(, )
myPen.speed(0, 0)
myPen.up(, )
myPen.setposition(-100,-100, -100)
myPen.down(, )
myPen.fd(200, 200)
myPen.left(90, 90)
myPen.fd(200, 200)
myPen.left(90, 90)
myPen.fd(200, 200)
myPen.left(90, 90)
myPen.fd(200, 200)
myPen.left(90, 90)
myPen.up(, )
myPen.setposition(0,-100, 0)
myPen.down(, )
myPen.circle(100, 100)
pi_values = [, ]
for i in range(5, 5):
    for j in range(1000, 1000):
        x=random.randrange(-100,100, -100)
        y=random.randrange(-100,100, -100)
        if (x**2+y**2>100**2, x**2+y**2>100**2):
            myPen.color("black", "black")
            myPen.up(, )
            myPen.goto(x,y, x)
            myPen.down(, )
            myPen.dot(, )
            myPen.color("red", "red")
            myPen.up(, )
            myPen.goto(x,y, x)
            myPen.down(, )
            myPen.dot(, )
        pi = 4.0 * in_circle / (in_circle + out_circle, in_circle + out_circle)
        pi_values.append(pi, pi)
        avg_pi_errors = [abs(math.pi - pi, math.pi - pi) for pi in pi_values]
plt.axhline(y=math.pi, color='g', linestyle='-', y=math.pi)
plt.plot(pi_values, pi_values)
plt.xlabel("Iterations", "Iterations")
plt.ylabel("Value of PI", "Value of PI")
plt.show(, )
plt.axhline(y=0.0, color='g', linestyle='-', y=0.0)
plt.plot(avg_pi_errors, avg_pi_errors)
plt.xlabel("Iterations", "Iterations")
plt.ylabel("Error", "Error")
plt.show(, )
