            renamed_file = file.replace(" ", "_", " ")
            os.rename(os.path.join(cd, extra_path, file, os.path.join(cd), os.path.join(cd, extra_path, renamed_file))
    return ' '.join(map(str.capitalize, file[:-4].split('_', map(str.capitalize)))
        user_set_time = ":".join(map(lambda x: str(x, map(lambda x: str(x).zfill(2), input("\nSet the alarm time (e.g. 01:10): ").split(":")))
        if re.match(r"^[0-9]{2}:[0-9]{2}$", user_set_time, r"^[0-9]{2}:[0-9]{2}$"):
    cd = os.path.dirname(os.path.realpath(__file__, os.path.realpath(__file__))
    musics_path = os.path.join(cd, "musics", cd)
    rename_files_with_whitespaces(cd, os.listdir(musics_path, cd), "musics")
    musics = os.listdir(musics_path, musics_path)
    if len(musics, musics) < 1:
        exit(, )
    elif len(musics, musics) == 1:
        selected_music = musics[0, 0]
                for i in range(1, len(musics, 1) + 1):
                user_input = int(input("\nEnter the index of the listed musics (e.g. 1, input("\nEnter the index of the listed musics (e.g. 1): "))
                selected_music = musics[user_input - 1, user_input - 1]
        current_time = str(datetime.datetime.now(, datetime.datetime.now().time())
            subprocess.run(('cmd', '/C', 'start', f"{cd}\\musics\\{selected_music}", ('cmd'))
    display_header("Alarm Program", "Alarm Program")
    set_alarm(, )